/*
Deployment script for ScoreCard.Admin.DB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ScoreCard.Admin.DB"
:setvar DefaultFilePrefix "ScoreCard.Admin.DB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER16\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER16\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'The following operation was generated from a refactoring log file eda60848-3ef8-4102-8a98-d4bb2011cfb9';

PRINT N'Rename [dbo].[Intermediary].[IntermediaryStatus] to ApplicationStatus';


GO
EXECUTE sp_rename @objname = N'[dbo].[Intermediary].[IntermediaryStatus]', @newname = N'ApplicationStatus', @objtype = N'COLUMN';


GO
PRINT N'Dropping [dbo].[FK_ApplicationDocument_DocumentCategory]...';


GO
ALTER TABLE [dbo].[ApplicationDocument] DROP CONSTRAINT [FK_ApplicationDocument_DocumentCategory];


GO
PRINT N'Dropping [dbo].[FK_IntermediaryDocument_DocumentCategory]...';


GO
ALTER TABLE [dbo].[IntermediaryDocument] DROP CONSTRAINT [FK_IntermediaryDocument_DocumentCategory];


GO
PRINT N'Dropping [dbo].[FK_IntermediaryAssessorDocument_DocumentCategory]...';


GO
ALTER TABLE [dbo].[IntermediaryAssessorDocument] DROP CONSTRAINT [FK_IntermediaryAssessorDocument_DocumentCategory];


GO
PRINT N'Dropping [dbo].[FK_Document_DocumentCategory]...';


GO
ALTER TABLE [dbo].[Document] DROP CONSTRAINT [FK_Document_DocumentCategory];


GO
PRINT N'Altering [dbo].[Intermediary]...';


GO
ALTER TABLE [dbo].[Intermediary]
    ADD [AdminReviewRequested] BIT NULL;


GO
PRINT N'Starting rebuilding table [dbo].[DocumentCategory]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_DocumentCategory] (
    [DocumentCategoryId] UNIQUEIDENTIFIER NOT NULL,
    [Name]               NVARCHAR (200)   NULL,
    [ApplicationStage]   NVARCHAR (200)   NULL,
    [TrackExpiry]        BIT              NULL,
    [Mandatory]          BIT              NULL,
    [NeedsExpiryDate]    BIT              NULL,
    [NeedsStartDate]     BIT              NULL,
    [YearsRequired]      INT              NULL,
    [Note]               NVARCHAR (1000)  NULL,
    [Type]               INT              NULL,
    PRIMARY KEY CLUSTERED ([DocumentCategoryId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[DocumentCategory])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type])
        SELECT   [DocumentCategoryId],
                 [Name],
                 [ApplicationStage],
                 [TrackExpiry],
                 [Mandatory],
                 [NeedsExpiryDate],
                 [NeedsStartDate],
                 [YearsRequired],
                 [Note],
                 [Type]
        FROM     [dbo].[DocumentCategory]
        ORDER BY [DocumentCategoryId] ASC;
    END

DROP TABLE [dbo].[DocumentCategory];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_DocumentCategory]', N'DocumentCategory';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_ApplicationDocument_DocumentCategory]...';


GO
ALTER TABLE [dbo].[ApplicationDocument] WITH NOCHECK
    ADD CONSTRAINT [FK_ApplicationDocument_DocumentCategory] FOREIGN KEY ([DocumentCategoryID]) REFERENCES [dbo].[DocumentCategory] ([DocumentCategoryId]);


GO
PRINT N'Creating [dbo].[FK_IntermediaryDocument_DocumentCategory]...';


GO
ALTER TABLE [dbo].[IntermediaryDocument] WITH NOCHECK
    ADD CONSTRAINT [FK_IntermediaryDocument_DocumentCategory] FOREIGN KEY ([DocumentCategoryID]) REFERENCES [dbo].[DocumentCategory] ([DocumentCategoryId]);


GO
PRINT N'Creating [dbo].[FK_IntermediaryAssessorDocument_DocumentCategory]...';


GO
ALTER TABLE [dbo].[IntermediaryAssessorDocument] WITH NOCHECK
    ADD CONSTRAINT [FK_IntermediaryAssessorDocument_DocumentCategory] FOREIGN KEY ([DocumentCategoryID]) REFERENCES [dbo].[DocumentCategory] ([DocumentCategoryId]);


GO
PRINT N'Creating [dbo].[FK_Document_DocumentCategory]...';


GO
ALTER TABLE [dbo].[Document] WITH NOCHECK
    ADD CONSTRAINT [FK_Document_DocumentCategory] FOREIGN KEY ([DocumentCategoryId]) REFERENCES [dbo].[DocumentCategory] ([DocumentCategoryId]);


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'eda60848-3ef8-4102-8a98-d4bb2011cfb9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('eda60848-3ef8-4102-8a98-d4bb2011cfb9')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

--if (select count(1) from [dbo].[DocumentType]) = 0
--	BEGIN
		
--	INSERT INTO [dbo].[DocumentType]  ([DocumentTypeName])  VALUES  ('Qualifications');
--	INSERT INTO [dbo].[DocumentType]  ([DocumentTypeName])  VALUES  ('Experience');
--	INSERT INTO [dbo].[DocumentType]  ([DocumentTypeName])  VALUES  ('Resume');
--	INSERT INTO [dbo].[DocumentType]  ([DocumentTypeName])  VALUES  ('OHS');
--	INSERT INTO [dbo].[DocumentType]  ([DocumentTypeName])  VALUES  ('SafeWorkMethodStatement');
--	INSERT INTO [dbo].[DocumentType]  ([DocumentTypeName])  VALUES  ('PublicLiabilityIns');
--	INSERT INTO [dbo].[DocumentType]  ([DocumentTypeName])  VALUES  ('ProfessionalIndemnityIns');
--	INSERT INTO [dbo].[DocumentType]  ([DocumentTypeName])  VALUES  ('WorkingWithChildrenCard');
--	INSERT INTO [dbo].[DocumentType]  ([DocumentTypeName])  VALUES  ('AssessorAgreement');
--	END
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[ApplicationDocument] WITH CHECK CHECK CONSTRAINT [FK_ApplicationDocument_DocumentCategory];

ALTER TABLE [dbo].[IntermediaryDocument] WITH CHECK CHECK CONSTRAINT [FK_IntermediaryDocument_DocumentCategory];

ALTER TABLE [dbo].[IntermediaryAssessorDocument] WITH CHECK CHECK CONSTRAINT [FK_IntermediaryAssessorDocument_DocumentCategory];

ALTER TABLE [dbo].[Document] WITH CHECK CHECK CONSTRAINT [FK_Document_DocumentCategory];


GO
PRINT N'Update complete.';


GO
