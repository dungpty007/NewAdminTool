/*
Deployment script for ScoreCard.Admin.DB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ScoreCard.Admin.DB"
:setvar DefaultFilePrefix "ScoreCard.Admin.DB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER16\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER16\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[AdminApplicationDocumentNotes]...';


GO
CREATE TABLE [dbo].[AdminApplicationDocumentNotes] (
    [Id]            UNIQUEIDENTIFIER NOT NULL,
    [NoteAddedDate] DATETIME         NULL,
    [Note]          NVARCHAR (1000)  NULL,
    [ApplicationId] UNIQUEIDENTIFIER NOT NULL,
    [DocumentID]    UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AdminApplicationNotes]...';


GO
CREATE TABLE [dbo].[AdminApplicationNotes] (
    [Id]            UNIQUEIDENTIFIER NOT NULL,
    [NoteAddedDate] DATETIME         NULL,
    [Note]          NVARCHAR (1000)  NULL,
    [ApplicationId] UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Application]...';


GO
CREATE TABLE [dbo].[Application] (
    [Id]                         UNIQUEIDENTIFIER NOT NULL,
    [AssessorId]                 UNIQUEIDENTIFIER NOT NULL,
    [ApplicationStatus]          INT              NULL,
    [CreationDate]               DATETIME         NULL,
    [CurrentStage]               INT              NULL,
    [Stage1AdminReviewRequested] BIT              NULL,
    [Stage3AdminReviewRequested] BIT              NULL,
    [Stage5AdminReviewRequested] BIT              NULL,
    [TrainingStatus]             INT              NULL,
    [Active]                     BIT              NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ApplicationDocument]...';


GO
CREATE TABLE [dbo].[ApplicationDocument] (
    [ApplicationId]        UNIQUEIDENTIFIER NOT NULL,
    [DocumentCategoryID]   UNIQUEIDENTIFIER NOT NULL,
    [UploadedDate]         DATETIME         NULL,
    [DocumentId]           UNIQUEIDENTIFIER NOT NULL,
    [DocumentReviewStatus] INT              NULL,
    [Stage]                INT              NULL,
    CONSTRAINT [PK_ApplicationDocument] PRIMARY KEY CLUSTERED ([ApplicationId] ASC, [DocumentId] ASC)
);


GO
PRINT N'Creating [dbo].[ConflictOfInterest]...';


GO
CREATE TABLE [dbo].[ConflictOfInterest] (
    [Id]            UNIQUEIDENTIFIER NOT NULL,
    [UploadedDate]  DATETIME         NULL,
    [Note]          NVARCHAR (1000)  NULL,
    [ApplicationId] UNIQUEIDENTIFIER NOT NULL,
    [IsCurrent]     BIT              NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[DocLibDocumentNotes]...';


GO
CREATE TABLE [dbo].[DocLibDocumentNotes] (
    [Id]            UNIQUEIDENTIFIER NOT NULL,
    [NoteAddedDate] DATETIME         NULL,
    [Note]          NVARCHAR (1000)  NULL,
    [DocumentID]    UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Document]...';


GO
CREATE TABLE [dbo].[Document] (
    [DocumentID]         UNIQUEIDENTIFIER NOT NULL,
    [DocumentCategoryId] UNIQUEIDENTIFIER NOT NULL,
    [DocumentOwnerID]    UNIQUEIDENTIFIER NULL,
    [OwnerType]          NVARCHAR (50)    NULL,
    [Active]             BIT              NULL,
    [CreatedDate]        DATETIME         NULL,
    [FileName]           NVARCHAR (MAX)   NULL,
    [DocumentDate]       DATETIME         NULL,
    PRIMARY KEY CLUSTERED ([DocumentID] ASC)
);


GO
PRINT N'Creating [dbo].[DocumentCategory]...';


GO
CREATE TABLE [dbo].[DocumentCategory] (
    [DocumentCategoryId] UNIQUEIDENTIFIER NOT NULL,
    [Name]               NVARCHAR (200)   NULL,
    [ApplicationStage]   NVARCHAR (200)   NULL,
    [TrackExpiry]        BIT              NULL,
    [Mandatory]          BIT              NULL,
    [NeedsExpiryDate]    BIT              NULL,
    [NeedsStartDate]     BIT              NULL,
    [YearsRequired]      INT              NULL,
    [Note]               NVARCHAR (1000)  NULL,
    [Type]               INT              NULL,
    PRIMARY KEY CLUSTERED ([DocumentCategoryId] ASC)
);


GO
PRINT N'Creating [dbo].[DocumentLinks]...';


GO
CREATE TABLE [dbo].[DocumentLinks] (
    [Id]               UNIQUEIDENTIFIER NOT NULL,
    [DocumentId]       UNIQUEIDENTIFIER NULL,
    [LinkedEntityType] NVARCHAR (50)    NULL,
    [LinkedEntityId]   NVARCHAR (50)    NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[DocumentMetadata]...';


GO
CREATE TABLE [dbo].[DocumentMetadata] (
    [MetaDataID] UNIQUEIDENTIFIER NOT NULL,
    [DocumentID] UNIQUEIDENTIFIER NOT NULL,
    [Key]        NVARCHAR (50)    NULL,
    [Value]      NVARCHAR (200)   NULL,
    PRIMARY KEY CLUSTERED ([MetaDataID] ASC)
);


GO
PRINT N'Creating [dbo].[EmailAttachFile]...';


GO
CREATE TABLE [dbo].[EmailAttachFile] (
    [Id]                 UNIQUEIDENTIFIER NOT NULL,
    [ApplicationId]      UNIQUEIDENTIFIER NULL,
    [FileName]           NVARCHAR (MAX)   NULL,
    [CreatedDate]        DATETIME         NULL,
    [OwnerID]            UNIQUEIDENTIFIER NULL,
    [AttachType]         NVARCHAR (200)   NULL,
    [Active]             BIT              NULL,
    [CloudContainerName] NVARCHAR (MAX)   NULL,
    [CloudID]            NVARCHAR (MAX)   NULL,
    [IsDefault]          BIT              NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[EmailInstance]...';


GO
CREATE TABLE [dbo].[EmailInstance] (
    [EmailInstanceID] UNIQUEIDENTIFIER NOT NULL,
    [EmailType]       NVARCHAR (200)   NOT NULL,
    [CreatedDate]     DATETIME         NOT NULL,
    [ModelData]       NVARCHAR (MAX)   NULL,
    [SendingStatus]   NVARCHAR (50)    NULL,
    [SentDate]        DATETIME         NULL,
    [FailedDate]      DATETIME         NULL,
    PRIMARY KEY CLUSTERED ([EmailInstanceID] ASC)
);


GO
PRINT N'Creating [dbo].[EmailInstance].[IX_EmailInstance_CreatedDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_EmailInstance_CreatedDate]
    ON [dbo].[EmailInstance]([CreatedDate] ASC);


GO
PRINT N'Creating [dbo].[EmailInstanceFull]...';


GO
CREATE TABLE [dbo].[EmailInstanceFull] (
    [EmailInstanceID] UNIQUEIDENTIFIER NOT NULL,
    [EmailTo]         NVARCHAR (500)   NULL,
    [Subject]         NVARCHAR (500)   NULL,
    [Body]            NVARCHAR (500)   NULL,
    PRIMARY KEY CLUSTERED ([EmailInstanceID] ASC)
);


GO
PRINT N'Creating [dbo].[EmailInstanceLinks]...';


GO
CREATE TABLE [dbo].[EmailInstanceLinks] (
    [Id]               UNIQUEIDENTIFIER NOT NULL,
    [EmailInstanceId]  UNIQUEIDENTIFIER NOT NULL,
    [LinkedEntityType] NVARCHAR (50)    NULL,
    [LinkedEntityId]   NVARCHAR (50)    NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[EmailInstanceLinks].[IX_EmailInstanceLinks_LinkedEntity]...';


GO
CREATE NONCLUSTERED INDEX [IX_EmailInstanceLinks_LinkedEntity]
    ON [dbo].[EmailInstanceLinks]([LinkedEntityType] ASC, [LinkedEntityId] ASC);


GO
PRINT N'Creating [dbo].[ExamEvent]...';


GO
CREATE TABLE [dbo].[ExamEvent] (
    [Id]                    UNIQUEIDENTIFIER NOT NULL,
    [ExamEventName]         NVARCHAR (200)   NOT NULL,
    [ExamEventDate]         DATE             NOT NULL,
    [Description]           NVARCHAR (MAX)   NULL,
    [BookingClosingDate]    DATE             NOT NULL,
    [AllocateExaminer]      NVARCHAR (MAX)   NOT NULL,
    [Venue]                 NVARCHAR (MAX)   NOT NULL,
    [StartTime]             TIME (7)         NOT NULL,
    [EndTime]               TIME (7)         NOT NULL,
    [ApplicantEmailAddress] NVARCHAR (MAX)   NOT NULL,
    [AssessorId]            UNIQUEIDENTIFIER NOT NULL,
    [ApplicationId]         UNIQUEIDENTIFIER NOT NULL,
    [ExamVenueId]           UNIQUEIDENTIFIER NOT NULL,
    [ExamOutcome]           BIT              NULL,
    [ExamNote]              NVARCHAR (1000)  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ExamEventBooking]...';


GO
CREATE TABLE [dbo].[ExamEventBooking] (
    [BookingId]         UNIQUEIDENTIFIER NOT NULL,
    [ExamEventId]       UNIQUEIDENTIFIER NOT NULL,
    [ApplicationId]     UNIQUEIDENTIFIER NOT NULL,
    [BookingDate]       DATETIME         NOT NULL,
    [BookingActive]     BIT              NOT NULL,
    [ExamForAssessorId] UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([BookingId] ASC)
);


GO
PRINT N'Creating [dbo].[ExamLocation]...';


GO
CREATE TABLE [dbo].[ExamLocation] (
    [ExamVenueId]   UNIQUEIDENTIFIER NOT NULL,
    [HouseName]     NVARCHAR (100)   NOT NULL,
    [Description]   NVARCHAR (MAX)   NULL,
    [Address]       NVARCHAR (MAX)   NOT NULL,
    [Active]        BIT              NULL,
    [ExamVenueNote] NVARCHAR (1000)  NULL,
    PRIMARY KEY CLUSTERED ([ExamVenueId] ASC)
);


GO
PRINT N'Creating [dbo].[FileLocationDetails]...';


GO
CREATE TABLE [dbo].[FileLocationDetails] (
    [DocumentId]         UNIQUEIDENTIFIER NOT NULL,
    [CloudContainerName] NVARCHAR (MAX)   NULL,
    [CloudID]            NVARCHAR (MAX)   NULL,
    PRIMARY KEY CLUSTERED ([DocumentId] ASC)
);


GO
PRINT N'Creating [dbo].[Intermediary]...';


GO
CREATE TABLE [dbo].[Intermediary] (
    [Id]                   UNIQUEIDENTIFIER NOT NULL,
    [AssessorId]           UNIQUEIDENTIFIER NOT NULL,
    [ApplicationStatus]    INT              NULL,
    [CreationDate]         DATETIME         NULL,
    [AdminReviewRequested] BIT              NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[IntermediaryAssessor]...';


GO
CREATE TABLE [dbo].[IntermediaryAssessor] (
    [Id]                  UNIQUEIDENTIFIER NOT NULL,
    [AssessorId]          UNIQUEIDENTIFIER NOT NULL,
    [IntermediaryContent] NVARCHAR (3000)  NOT NULL,
    [Status]              INT              NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[IntermediaryAssessorDocument]...';


GO
CREATE TABLE [dbo].[IntermediaryAssessorDocument] (
    [IntermediaryAssessorId] UNIQUEIDENTIFIER NOT NULL,
    [DocumentId]             UNIQUEIDENTIFIER NOT NULL,
    [DocumentReviewStatus]   INT              NULL,
    CONSTRAINT [PK_IntermediaryAssessorDocument] PRIMARY KEY CLUSTERED ([IntermediaryAssessorId] ASC, [DocumentId] ASC)
);


GO
PRINT N'Creating [dbo].[IntermediaryDocument]...';


GO
CREATE TABLE [dbo].[IntermediaryDocument] (
    [IntermediaryId]       UNIQUEIDENTIFIER NOT NULL,
    [DocumentCategoryID]   UNIQUEIDENTIFIER NOT NULL,
    [UploadedDate]         DATETIME         NULL,
    [DocumentId]           UNIQUEIDENTIFIER NOT NULL,
    [DocumentReviewStatus] INT              NULL,
    CONSTRAINT [PK_IntermediaryDocument] PRIMARY KEY CLUSTERED ([IntermediaryId] ASC, [DocumentId] ASC)
);


GO
PRINT N'Creating [dbo].[ProfileInformation]...';


GO
CREATE TABLE [dbo].[ProfileInformation] (
    [Id]           UNIQUEIDENTIFIER NOT NULL,
    [Sub]          UNIQUEIDENTIFIER NULL,
    [FirstName]    VARCHAR (50)     NULL,
    [LastName]     VARCHAR (50)     NULL,
    [EmailAddress] VARCHAR (50)     NULL,
    [State]        VARCHAR (10)     NULL,
    [Postcode]     NVARCHAR (50)    NULL,
    [AddressLine1] VARCHAR (50)     NULL,
    [AddressLine2] VARCHAR (50)     NULL,
    [City]         VARCHAR (50)     NULL,
    [MobileNumber] VARCHAR (50)     NULL,
    [PhoneNumber]  VARCHAR (50)     NULL,
    [IsActive]     BIT              NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[RiskFlagsRecordNote]...';


GO
CREATE TABLE [dbo].[RiskFlagsRecordNote] (
    [Id]               UNIQUEIDENTIFIER NOT NULL,
    [AssessorID]       UNIQUEIDENTIFIER NOT NULL,
    [RiskPrincipalID]  UNIQUEIDENTIFIER NOT NULL,
    [PrincipalOutcome] BIT              NULL,
    [NoteAddedDate]    DATETIME         NULL,
    [RecordRiskNote]   NVARCHAR (1000)  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[RiskPrincipal]...';


GO
CREATE TABLE [dbo].[RiskPrincipal] (
    [Id]       UNIQUEIDENTIFIER NOT NULL,
    [Pricipal] NVARCHAR (1000)  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TrainingEvent]...';


GO
CREATE TABLE [dbo].[TrainingEvent] (
    [Id]                 UNIQUEIDENTIFIER NOT NULL,
    [EventName]          NVARCHAR (200)   NOT NULL,
    [EventType]          NVARCHAR (50)    NOT NULL,
    [EventDate]          DATE             NOT NULL,
    [BookingClosingDate] DATE             NOT NULL,
    [Description]        NVARCHAR (MAX)   NULL,
    [LocationId]         UNIQUEIDENTIFIER NOT NULL,
    [Capacity]           INT              NOT NULL,
    [FromTime]           TIME (7)         NULL,
    [ToTime]             TIME (7)         NULL,
    [RoomNumber]         NVARCHAR (200)   NULL,
    [TrainersDetails]    NVARCHAR (MAX)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TrainingEvent].[IX_TrainingEvent_EventDate]...';


GO
CREATE NONCLUSTERED INDEX [IX_TrainingEvent_EventDate]
    ON [dbo].[TrainingEvent]([EventDate] ASC);


GO
PRINT N'Creating [dbo].[TrainingEventBooking]...';


GO
CREATE TABLE [dbo].[TrainingEventBooking] (
    [BookingId]             UNIQUEIDENTIFIER NOT NULL,
    [TrainingEventId]       UNIQUEIDENTIFIER NOT NULL,
    [ApplicationId]         UNIQUEIDENTIFIER NOT NULL,
    [BookingDate]           DATETIME         NOT NULL,
    [BookingActive]         BIT              NOT NULL,
    [TrainingForAssessorId] UNIQUEIDENTIFIER NOT NULL,
    [TrainingOutcome]       BIT              NULL,
    [TrainingNote]          NVARCHAR (1000)  NULL,
    PRIMARY KEY CLUSTERED ([BookingId] ASC)
);


GO
PRINT N'Creating [dbo].[TrainingLocation]...';


GO
CREATE TABLE [dbo].[TrainingLocation] (
    [LocationId]       UNIQUEIDENTIFIER NOT NULL,
    [Name]             NVARCHAR (100)   NULL,
    [VagueLocation]    NVARCHAR (MAX)   NULL,
    [DetailedLocation] NVARCHAR (MAX)   NULL,
    [AccessDetails]    NVARCHAR (MAX)   NULL,
    [DefaultCapacity]  INT              NULL,
    [Active]           BIT              NULL,
    PRIMARY KEY CLUSTERED ([LocationId] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[AdminApplicationDocumentNotes]...';


GO
ALTER TABLE [dbo].[AdminApplicationDocumentNotes]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating unnamed constraint on [dbo].[AdminApplicationNotes]...';


GO
ALTER TABLE [dbo].[AdminApplicationNotes]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating unnamed constraint on [dbo].[Application]...';


GO
ALTER TABLE [dbo].[Application]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating unnamed constraint on [dbo].[ConflictOfInterest]...';


GO
ALTER TABLE [dbo].[ConflictOfInterest]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating unnamed constraint on [dbo].[DocLibDocumentNotes]...';


GO
ALTER TABLE [dbo].[DocLibDocumentNotes]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating unnamed constraint on [dbo].[Document]...';


GO
ALTER TABLE [dbo].[Document]
    ADD DEFAULT NEWID() FOR [DocumentID];


GO
PRINT N'Creating unnamed constraint on [dbo].[ExamEvent]...';


GO
ALTER TABLE [dbo].[ExamEvent]
    ADD DEFAULT NEWID() FOR [ApplicationId];


GO
PRINT N'Creating unnamed constraint on [dbo].[ExamEvent]...';


GO
ALTER TABLE [dbo].[ExamEvent]
    ADD DEFAULT NEWID() FOR [ExamVenueId];


GO
PRINT N'Creating unnamed constraint on [dbo].[Intermediary]...';


GO
ALTER TABLE [dbo].[Intermediary]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating unnamed constraint on [dbo].[IntermediaryAssessor]...';


GO
ALTER TABLE [dbo].[IntermediaryAssessor]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating unnamed constraint on [dbo].[IntermediaryAssessor]...';


GO
ALTER TABLE [dbo].[IntermediaryAssessor]
    ADD DEFAULT 0 FOR [Status];


GO
PRINT N'Creating unnamed constraint on [dbo].[RiskFlagsRecordNote]...';


GO
ALTER TABLE [dbo].[RiskFlagsRecordNote]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating unnamed constraint on [dbo].[RiskPrincipal]...';


GO
ALTER TABLE [dbo].[RiskPrincipal]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating [dbo].[FK_AdminApplicationDocumentNotes_Application]...';


GO
ALTER TABLE [dbo].[AdminApplicationDocumentNotes]
    ADD CONSTRAINT [FK_AdminApplicationDocumentNotes_Application] FOREIGN KEY ([ApplicationId]) REFERENCES [dbo].[Application] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AdminApplicationDocumentNotes_Document]...';


GO
ALTER TABLE [dbo].[AdminApplicationDocumentNotes]
    ADD CONSTRAINT [FK_AdminApplicationDocumentNotes_Document] FOREIGN KEY ([DocumentID]) REFERENCES [dbo].[Document] ([DocumentID]);


GO
PRINT N'Creating [dbo].[FK_AdminApplicationNotes_Application]...';


GO
ALTER TABLE [dbo].[AdminApplicationNotes]
    ADD CONSTRAINT [FK_AdminApplicationNotes_Application] FOREIGN KEY ([ApplicationId]) REFERENCES [dbo].[Application] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ApplicationDocument_DocumentCategory]...';


GO
ALTER TABLE [dbo].[ApplicationDocument]
    ADD CONSTRAINT [FK_ApplicationDocument_DocumentCategory] FOREIGN KEY ([DocumentCategoryID]) REFERENCES [dbo].[DocumentCategory] ([DocumentCategoryId]);


GO
PRINT N'Creating [dbo].[FK_ApplicationDocument_Document]...';


GO
ALTER TABLE [dbo].[ApplicationDocument]
    ADD CONSTRAINT [FK_ApplicationDocument_Document] FOREIGN KEY ([DocumentId]) REFERENCES [dbo].[Document] ([DocumentID]);


GO
PRINT N'Creating [dbo].[FK_ApplicationDocument_Application]...';


GO
ALTER TABLE [dbo].[ApplicationDocument]
    ADD CONSTRAINT [FK_ApplicationDocument_Application] FOREIGN KEY ([ApplicationId]) REFERENCES [dbo].[Application] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ConflictOfInterest_Application]...';


GO
ALTER TABLE [dbo].[ConflictOfInterest]
    ADD CONSTRAINT [FK_ConflictOfInterest_Application] FOREIGN KEY ([ApplicationId]) REFERENCES [dbo].[Application] ([Id]);


GO
PRINT N'Creating [dbo].[FK_DocLibDocumentNotes_Document]...';


GO
ALTER TABLE [dbo].[DocLibDocumentNotes]
    ADD CONSTRAINT [FK_DocLibDocumentNotes_Document] FOREIGN KEY ([DocumentID]) REFERENCES [dbo].[Document] ([DocumentID]);


GO
PRINT N'Creating [dbo].[FK_Document_DocumentCategory]...';


GO
ALTER TABLE [dbo].[Document]
    ADD CONSTRAINT [FK_Document_DocumentCategory] FOREIGN KEY ([DocumentCategoryId]) REFERENCES [dbo].[DocumentCategory] ([DocumentCategoryId]);


GO
PRINT N'Creating [dbo].[FK_DocumentLinks_Document]...';


GO
ALTER TABLE [dbo].[DocumentLinks]
    ADD CONSTRAINT [FK_DocumentLinks_Document] FOREIGN KEY ([DocumentId]) REFERENCES [dbo].[Document] ([DocumentID]);


GO
PRINT N'Creating [dbo].[FK_DocumentMetadata_Document]...';


GO
ALTER TABLE [dbo].[DocumentMetadata]
    ADD CONSTRAINT [FK_DocumentMetadata_Document] FOREIGN KEY ([DocumentID]) REFERENCES [dbo].[Document] ([DocumentID]);


GO
PRINT N'Creating [dbo].[FK_EmailInstanceFull_EmailInstance]...';


GO
ALTER TABLE [dbo].[EmailInstanceFull]
    ADD CONSTRAINT [FK_EmailInstanceFull_EmailInstance] FOREIGN KEY ([EmailInstanceID]) REFERENCES [dbo].[EmailInstance] ([EmailInstanceID]);


GO
PRINT N'Creating [dbo].[FK_EmailInstanceLinks_EmailInstance]...';


GO
ALTER TABLE [dbo].[EmailInstanceLinks]
    ADD CONSTRAINT [FK_EmailInstanceLinks_EmailInstance] FOREIGN KEY ([EmailInstanceId]) REFERENCES [dbo].[EmailInstance] ([EmailInstanceID]);


GO
PRINT N'Creating [dbo].[FK_ExamEvent_Application]...';


GO
ALTER TABLE [dbo].[ExamEvent]
    ADD CONSTRAINT [FK_ExamEvent_Application] FOREIGN KEY ([ApplicationId]) REFERENCES [dbo].[Application] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ExamEventBooking_TrainingEvent]...';


GO
ALTER TABLE [dbo].[ExamEventBooking]
    ADD CONSTRAINT [FK_ExamEventBooking_TrainingEvent] FOREIGN KEY ([ExamEventId]) REFERENCES [dbo].[ExamEvent] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ExamEventBooking_Application]...';


GO
ALTER TABLE [dbo].[ExamEventBooking]
    ADD CONSTRAINT [FK_ExamEventBooking_Application] FOREIGN KEY ([ApplicationId]) REFERENCES [dbo].[Application] ([Id]);


GO
PRINT N'Creating [dbo].[FK_FileLocationDetails_Document]...';


GO
ALTER TABLE [dbo].[FileLocationDetails]
    ADD CONSTRAINT [FK_FileLocationDetails_Document] FOREIGN KEY ([DocumentId]) REFERENCES [dbo].[Document] ([DocumentID]);


GO
PRINT N'Creating [dbo].[FK_IntermediaryAssessorDocument_IntermediaryAssessor]...';


GO
ALTER TABLE [dbo].[IntermediaryAssessorDocument]
    ADD CONSTRAINT [FK_IntermediaryAssessorDocument_IntermediaryAssessor] FOREIGN KEY ([IntermediaryAssessorId]) REFERENCES [dbo].[IntermediaryAssessor] ([Id]);


GO
PRINT N'Creating [dbo].[FK_IntermediaryAssessorDocument_Document]...';


GO
ALTER TABLE [dbo].[IntermediaryAssessorDocument]
    ADD CONSTRAINT [FK_IntermediaryAssessorDocument_Document] FOREIGN KEY ([DocumentId]) REFERENCES [dbo].[Document] ([DocumentID]);


GO
PRINT N'Creating [dbo].[FK_IntermediaryDocument_DocumentCategory]...';


GO
ALTER TABLE [dbo].[IntermediaryDocument]
    ADD CONSTRAINT [FK_IntermediaryDocument_DocumentCategory] FOREIGN KEY ([DocumentCategoryID]) REFERENCES [dbo].[DocumentCategory] ([DocumentCategoryId]);


GO
PRINT N'Creating [dbo].[FK_IntermediaryDocument_Document]...';


GO
ALTER TABLE [dbo].[IntermediaryDocument]
    ADD CONSTRAINT [FK_IntermediaryDocument_Document] FOREIGN KEY ([DocumentId]) REFERENCES [dbo].[Document] ([DocumentID]);


GO
PRINT N'Creating [dbo].[FK_IntermediaryDocument_Intermediary]...';


GO
ALTER TABLE [dbo].[IntermediaryDocument]
    ADD CONSTRAINT [FK_IntermediaryDocument_Intermediary] FOREIGN KEY ([IntermediaryId]) REFERENCES [dbo].[Intermediary] ([Id]);


GO
PRINT N'Creating [dbo].[FK_RiskFlagsRecordNote_Assessor]...';


GO
ALTER TABLE [dbo].[RiskFlagsRecordNote]
    ADD CONSTRAINT [FK_RiskFlagsRecordNote_Assessor] FOREIGN KEY ([AssessorID]) REFERENCES [dbo].[ProfileInformation] ([Id]);


GO
PRINT N'Creating [dbo].[FK_RiskFlagsRecordNote_RiskPrincipal]...';


GO
ALTER TABLE [dbo].[RiskFlagsRecordNote]
    ADD CONSTRAINT [FK_RiskFlagsRecordNote_RiskPrincipal] FOREIGN KEY ([RiskPrincipalID]) REFERENCES [dbo].[RiskPrincipal] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TrainingEvent_TrainingLocation]...';


GO
ALTER TABLE [dbo].[TrainingEvent]
    ADD CONSTRAINT [FK_TrainingEvent_TrainingLocation] FOREIGN KEY ([LocationId]) REFERENCES [dbo].[TrainingLocation] ([LocationId]);


GO
PRINT N'Creating [dbo].[FK_TrainingEventBooking_TrainingEvent]...';


GO
ALTER TABLE [dbo].[TrainingEventBooking]
    ADD CONSTRAINT [FK_TrainingEventBooking_TrainingEvent] FOREIGN KEY ([TrainingEventId]) REFERENCES [dbo].[TrainingEvent] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TrainingEventBooking_Application]...';


GO
ALTER TABLE [dbo].[TrainingEventBooking]
    ADD CONSTRAINT [FK_TrainingEventBooking_Application] FOREIGN KEY ([ApplicationId]) REFERENCES [dbo].[Application] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '588deb71-6577-41e6-85b2-9214c634ebf4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('588deb71-6577-41e6-85b2-9214c634ebf4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f6493fb1-0901-4553-969b-b0a13e229e08')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f6493fb1-0901-4553-969b-b0a13e229e08')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '15c396d1-f731-4a36-8332-b39fd746468c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('15c396d1-f731-4a36-8332-b39fd746468c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f1d97c4d-4bc9-4b0e-8fc7-0ac1435b7a71')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f1d97c4d-4bc9-4b0e-8fc7-0ac1435b7a71')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7ecf56db-fff2-4894-b243-f1abd4da2e95')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7ecf56db-fff2-4894-b243-f1abd4da2e95')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2fbe2008-74d3-4a30-a9d8-36344fbade1e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2fbe2008-74d3-4a30-a9d8-36344fbade1e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '73f610dd-6483-4519-a3bc-fe5b6e0983d4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('73f610dd-6483-4519-a3bc-fe5b6e0983d4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fafd077b-4838-458b-9ab3-00b969fa6cda')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fafd077b-4838-458b-9ab3-00b969fa6cda')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '04c299f3-23e1-49a0-a0a3-de276df92d0b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('04c299f3-23e1-49a0-a0a3-de276df92d0b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4b17e197-4ef3-4810-b691-717d1147123e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4b17e197-4ef3-4810-b691-717d1147123e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd8707582-f855-425a-999d-743322a9d767')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d8707582-f855-425a-999d-743322a9d767')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ce35de74-e344-4e8e-b0d6-7fa752f69a01')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ce35de74-e344-4e8e-b0d6-7fa752f69a01')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'eda60848-3ef8-4102-8a98-d4bb2011cfb9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('eda60848-3ef8-4102-8a98-d4bb2011cfb9')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

if (select count(1) from [dbo].[DocumentCategory]) = 0
	BEGIN
		



INSERT [dbo].[DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type]) VALUES (N'8f5d6eea-e4e3-4406-92d1-7564f59ac658', N'Qualifications', N'1', NULL, 0, 0, 0, NULL, NULL, 1)

INSERT [dbo].[DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type]) VALUES (N'7cc45828-aaef-400c-97fc-8b29e40a1afb', N'Documented Experience', N'1', NULL, 1, 0, 0, NULL, NULL, 1)

INSERT [dbo].[DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type]) VALUES (N'cb9e01a9-5964-47cd-aeed-6b1e04733c65', N'CV/Resume', N'1', NULL, 1, 0, 0, NULL, NULL, 1)

INSERT [dbo].[DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type]) VALUES (N'f28c2133-3ed2-430f-b070-515bfce61a11', N'Professional indemnity Ins', N'3', NULL, 1, 1, 0, NULL, N'Please record expiry date under date column', 1)

INSERT [dbo].[DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type]) VALUES (N'c9be4035-ea9e-45bb-a74b-581d8aecf7ee', N'Safe Work Method Statement', N'3', NULL, 1, 0, 0, NULL, NULL, 1)

INSERT [dbo].[DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type]) VALUES (N'1e5d96f9-0217-410d-bc19-053932e22d77', N'OHS', N'3', NULL, 1, 0, 1, 5, N'Please record award date under date column', 1)

INSERT [dbo].[DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type]) VALUES (N'd869cfbb-cf7e-4f30-9d15-804c0358ecad', N'Brand Materials for Approval', N'0', NULL, 0, 0, 0, NULL, NULL, 2)

INSERT [dbo].[DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type]) VALUES (N'5fd76eaf-1437-4da2-8c38-a15e1b2229a6', N'Working with Children Card', N'3', NULL, 1, 0, 1, 5, N'Please record award date under date column', 1)

INSERT [dbo].[DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type]) VALUES (N'a61f5303-0c3d-49a8-b885-b2d73fb2a9e6', N'Assessor Agreement', N'5', NULL, 1, 1, 0, NULL, N'Please record signed date under date column', 1)

INSERT [dbo].[DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type]) VALUES (N'fd47d6cc-20e0-48dc-b7f0-b6161495a24c', N'Agreement', N'0', NULL, 0, 0, 0, NULL, NULL, 2)

INSERT [dbo].[DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type]) VALUES (N'548e3f25-49b1-46bc-b347-e97198ce1870', N'Public Liability Ins', N'3', NULL, 1, 1, 0, NULL, N'Please record expiry date under date column', 1)

INSERT [dbo].[DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type]) VALUES (N'efc1076f-4dba-46ca-816b-f36ef78d54df', N'Insurance', N'0', NULL, 0, 0, 0, NULL, NULL, 2)
INSERT [dbo].[DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type]) VALUES (N'694996b4-fe6c-4cd6-a031-25782b0a9064', N'Exam Documents', N'4', NULL, 0, 0, 0, NULL, N'Please include exam related documents', 1)

INSERT [dbo].[DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type]) VALUES (N'EEB8774B-37FD-4693-AFF0-30BDECD8A19F', N'Document for Assessor', N'6', NULL, 0, 0, 0, NULL, NULL, 1)
INSERT [dbo].[DocumentCategory] ([DocumentCategoryId], [Name], [ApplicationStage], [TrackExpiry], [Mandatory], [NeedsExpiryDate], [NeedsStartDate], [YearsRequired], [Note], [Type]) VALUES (N'e35ec033-6fff-4062-86b0-265b6ee6237e', N'Document Library', N'6', NULL, 0, 0, 0, NULL, NULL, 3)

END

-- update document category to change follow feedback: 373
UPDATE [dbo].[DocumentCategory]
   SET  [NeedsExpiryDate] = 1
      ,[NeedsStartDate] = 0
      ,[YearsRequired] = null 
	  ,[Note] ='Please record expiry date under date column'
 WHERE DocumentCategoryId ='5fd76eaf-1437-4da2-8c38-a15e1b2229a6'
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
